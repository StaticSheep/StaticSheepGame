IntroTest
GameObject
{
  name std::string "IntroScroll"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 0.000000
      y_ float 0.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  LuaComponent
  {
    name std::string "IntroScreen"
    loadCommand std::string "return function(self) end"
  }
}
GameObject
{
  name std::string "SlotMachine"
  archetype std::string "IntroMachine2"
  Transform
  {
    Translation Vec3
    {
      x_ float -20.422768
      y_ float 270.000000
      z_ float -100.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 2.000000
      y_ float 2.000000
      z_ float 0.000000
    }
  }
  SlotMachine
  {
    m_stopTexture std::string "ggg_reel.png"
    m_spinTexture std::string "ggg_reel_blur.png"
    m_slotBackTexture std::string "slotmachine_slotback.png"
    numSlots int 3
    slotSize Vec2
    {
      X float 0.550000
      Y float 0.750000
    }
    slotMargin float 40.000000
    slotOffset Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
    slotBackSize Vec2
    {
      X float 2.600000
      Y float 1.550000
    }
    startTime float 1.500000
    bonusTime float 0.300000
    useSpriteColor bool false
    backingColor Vec4
    {
      R float 1.000000
      G float 0.705882
      B float 0.000000
      A float 1.000000
    }
  }
}
GameObject
{
  name std::string "SlotMachine"
  archetype std::string "IntroMachine"
  Transform
  {
    Translation Vec3
    {
      x_ float 0.000000
      y_ float 0.000000
      z_ float -100.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 0.780000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  SlotMachine
  {
    m_stopTexture std::string "ggg_reel_tp.png"
    m_spinTexture std::string "ggg_reel_blur_tp.png"
    m_slotBackTexture std::string "slotmachine_slotback_tp.png"
    numSlots int 16
    slotSize Vec2
    {
      X float 0.550000
      Y float 0.750000
    }
    slotMargin float 40.000000
    slotOffset Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
    slotBackSize Vec2
    {
      X float 2.600000
      Y float 1.550000
    }
    startTime float 1.500000
    bonusTime float 0.150000
    useSpriteColor bool false
    backingColor Vec4
    {
      R float 1.000000
      G float 0.705882
      B float 0.000000
      A float 1.000000
    }
  }
}
GameObject
{
  name std::string "BGStars"
  archetype std::string "IntroStarBG"
  Transform
  {
    Translation Vec3
    {
      x_ float 0.000000
      y_ float 0.000000
      z_ float 801.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 9.000000
      y_ float 9.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "spacebg.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
    m_flipX bool false
    m_flipY bool false
  }
}
