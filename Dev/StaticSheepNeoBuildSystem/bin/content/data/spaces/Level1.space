Level1
GameObject
{
  name std::string "Character"
  archetype std::string "Character"
  Transform
  {
    Translation Vec3
    {
      x_ float 0.000000
      y_ float -100.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Default.png"
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  GamePad
  {
    GamepadIndex int 0
  }
  BoxCollider
  {
    m_width float 32.000000
    m_height float 32.000000
    m_materialName std::string "Wood"
    m_hasCollisionCallback bool true
  }
  PlayerController
  {
    playerNum int 0
  }
}
GameObject
{
  name std::string "PlatformBottom"
  archetype std::string "Platform1"
  Transform
  {
    Translation Vec3
    {
      x_ float 0.000000
      y_ float -275.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 2.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Platform.png"
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 1024.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
}
GameObject
{
  name std::string "PlatformTop"
  archetype std::string "Platform1"
  Transform
  {
    Translation Vec3
    {
      x_ float 0.000000
      y_ float 275.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 2.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Platform.png"
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 1024.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
}
GameObject
{
  name std::string "PlatformLeft"
  archetype std::string "Platform1"
  Transform
  {
    Translation Vec3
    {
      x_ float -500.000000
      y_ float 0.000000
      z_ float 0.000000
    }
    Rotation float 1.570700
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Platform.png"
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 512.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
}
GameObject
{
  name std::string "PlatformRight"
  archetype std::string "Platform1"
  Transform
  {
    Translation Vec3
    {
      x_ float 500.000000
      y_ float 0.000000
      z_ float 0.000000
    }
    Rotation float 1.570700
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Platform.png"
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 512.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
}
GameObject
{
  name std::string "CirclePlatL"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 0.000000
      y_ float 0.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "circle.png"
    Size Vec2
    {
      X float 5.000000
      Y float 5.000000
    }
  }
  CircleCollider
  {
    m_radius float 80.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
}
GameObject
{
  name std::string "CirclePlatR"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 160.000000
      y_ float 0.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "circle.png"
    Size Vec2
    {
      X float 5.000000
      Y float 5.000000
    }
  }
  CircleCollider
  {
    m_radius float 80.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
}
