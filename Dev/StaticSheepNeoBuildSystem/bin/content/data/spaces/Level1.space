Level1
GameObject
{
  name std::string "Background"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 0.000000
      y_ float 0.000000
      z_ float -500.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 2.500000
      y_ float 2.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "stars.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
}
GameObject
{
  name std::string "PlatformBottomLeft"
  archetype std::string "Platform1"
  Transform
  {
    Translation Vec3
    {
      x_ float -390.000000
      y_ float -295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 0.500000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Platform.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 256.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
}
GameObject
{
  name std::string "PlatformBottomMid"
  archetype std::string "Platform1"
  Transform
  {
    Translation Vec3
    {
      x_ float 0.000000
      y_ float -295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 0.500000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Platform.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 256.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
}
GameObject
{
  name std::string "PlatformLeft"
  archetype std::string "Platform1"
  Transform
  {
    Translation Vec3
    {
      x_ float -530.000000
      y_ float 0.000000
      z_ float 0.000000
    }
    Rotation float 1.570700
    Scale Vec3
    {
      x_ float 1.220000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Platform.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 624.640015
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
}
GameObject
{
  name std::string "PlatformRight"
  archetype std::string "Platform1"
  Transform
  {
    Translation Vec3
    {
      x_ float 530.000000
      y_ float 0.000000
      z_ float 0.000000
    }
    Rotation float 1.570700
    Scale Vec3
    {
      x_ float 1.220000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Platform.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 624.640015
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
}
GameObject
{
  name std::string "Level Controller"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 0.000000
      y_ float 0.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  SoundPlayer
  {
  }
  Level1_Logic
  {
    timeLimit float 60.000000
    numOfPlayers int 4
  }
}
GameObject
{
  name std::string "PlatformBottomRight"
  archetype std::string "Platform1"
  Transform
  {
    Translation Vec3
    {
      x_ float 390.000000
      y_ float -295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 0.500000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Platform.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 256.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
}
GameObject
{
  name std::string "PlatformTopLeft"
  archetype std::string "Platform1"
  Transform
  {
    Translation Vec3
    {
      x_ float -390.000000
      y_ float 295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 0.500000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Platform.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 256.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
}
GameObject
{
  name std::string "PlatformTopRight"
  archetype std::string "Platform1"
  Transform
  {
    Translation Vec3
    {
      x_ float 390.000000
      y_ float 295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 0.500000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Platform.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 256.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
}
GameObject
{
  name std::string "PlatformTopMid"
  archetype std::string "Platform1"
  Transform
  {
    Translation Vec3
    {
      x_ float 0.000000
      y_ float 295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 0.500000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Platform.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 256.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
}
GameObject
{
  name std::string "KillBox"
  archetype std::string "KillBox"
  Transform
  {
    Translation Vec3
    {
      x_ float 194.789993
      y_ float -310.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 4.090000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "danger.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 130.880005
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
}
GameObject
{
  name std::string "KillBox"
  archetype std::string "KillBox"
  Transform
  {
    Translation Vec3
    {
      x_ float -194.789993
      y_ float -310.209991
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 4.090000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "danger.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 130.880005
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
}
GameObject
{
  name std::string "KillBox"
  archetype std::string "KillBox"
  Transform
  {
    Translation Vec3
    {
      x_ float -194.789993
      y_ float 310.209991
      z_ float 0.000000
    }
    Rotation float 3.140000
    Scale Vec3
    {
      x_ float 4.090000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "danger.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 130.880005
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
}
GameObject
{
  name std::string "KillBox"
  archetype std::string "KillBox"
  Transform
  {
    Translation Vec3
    {
      x_ float 194.789993
      y_ float 310.209991
      z_ float 0.000000
    }
    Rotation float 3.140000
    Scale Vec3
    {
      x_ float 4.090000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "danger.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 130.880005
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
}
GameObject
{
  name std::string "Grinder"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float -245.000000
      y_ float -295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 32.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "Grinder"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float -210.000000
      y_ float -295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 32.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "Grinder"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float -175.000000
      y_ float -295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 32.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "Grinder"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float -140.000000
      y_ float -295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 32.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "Grinder"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float -245.000000
      y_ float 295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 32.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "Grinder"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float -210.000000
      y_ float 295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 32.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "Grinder"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float -175.000000
      y_ float 295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 32.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "Grinder"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float -140.000000
      y_ float 295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 32.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "Grinder"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float 245.000000
      y_ float 295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 32.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "Grinder"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float 210.000000
      y_ float 295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 32.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "Grinder"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float 175.000000
      y_ float 295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 32.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "Grinder"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float 140.000000
      y_ float 295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 32.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "Grinder"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float 245.000000
      y_ float -295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 32.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "Grinder"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float 210.000000
      y_ float -295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 32.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "Grinder"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float 175.000000
      y_ float -295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 32.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "Grinder"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float 140.000000
      y_ float -295.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BoxCollider
  {
    m_width float 32.000000
    m_height float 32.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
  }
  Grinder
  {
  }
}
