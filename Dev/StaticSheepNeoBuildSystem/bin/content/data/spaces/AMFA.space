AMFA
GameObject
{
  name std::string "Background"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float -1.201363
      y_ float -0.912146
      z_ float 200.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 2.200000
      y_ float 2.300000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "background_color.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.250000
      Y float 1.250000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BackgroundPan
  {
    rate float 0.010000
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 928.000000
      y_ float -256.000000
      z_ float 0.000000
    }
    Rotation float 1.570796
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "PlatformCorner"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float -830.998779
      y_ float -416.605225
      z_ float 1.000000
    }
    Rotation float -0.785398
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 1.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 4.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 256.000000
    m_height float 128.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float -928.000000
      y_ float 256.000000
      z_ float 0.000000
    }
    Rotation float 1.570796
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float -928.000000
      y_ float 0.000000
      z_ float 0.000000
    }
    Rotation float 1.570796
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 602.000000
    m_height float 128.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
}
GameObject
{
  name std::string "Level Controller"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 0.000000
      y_ float 0.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "cd_3.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  Camera
  {
    m_active bool true
    m_FOV float 2.775371
  }
  SoundEmitter
  {
  }
  SoundPlayer
  {
  }
  Level1_Logic
  {
    timeLimit float 6.000000
    numOfPlayers int 4
  }
  Level1_Lighting
  {
  }
  LuaComponent
  {
    name std::string "PauseMenu"
    loadCommand std::string "return function(self) self.opened = true self.ypos = 456 end"
  }

  LuaComponent
  {
    name std::string "PlayerHUD"
    loadCommand std::string "return function(self) end"
  }

  LuaComponent
  {
    name std::string "WinScreen"
    loadCommand std::string "return function(self) end"
  }
}
GameObject
{
  name std::string "PlatformCorner"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 829.856995
      y_ float 420.320007
      z_ float 1.000000
    }
    Rotation float -0.785398
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 1.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 4.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 256.000000
    m_height float 128.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 512.000000
      y_ float 512.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float -928.000000
      y_ float 128.000000
      z_ float 0.000000
    }
    Rotation float 1.570796
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float -928.000000
      y_ float -128.000000
      z_ float 0.000000
    }
    Rotation float 1.570796
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float -928.000000
      y_ float -256.000000
      z_ float 0.000000
    }
    Rotation float 1.570796
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "PlatformCorner"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float -830.998779
      y_ float 420.317017
      z_ float 1.000000
    }
    Rotation float 0.785398
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 1.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 4.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 256.000000
    m_height float 128.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
}
GameObject
{
  name std::string ""
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 920.022339
      y_ float -523.607483
      z_ float 1.500000
    }
    Rotation float 0.785398
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "generic_block_grey.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 6.000000
      Y float 6.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string ""
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float -928.031555
      y_ float -523.607483
      z_ float 1.500000
    }
    Rotation float 0.785398
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "generic_block_grey.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 6.000000
      Y float 6.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string ""
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float -928.031555
      y_ float 507.676208
      z_ float 1.500000
    }
    Rotation float 0.785398
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "generic_block_grey.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 6.000000
      Y float 6.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string ""
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 918.020203
      y_ float 507.676208
      z_ float 1.500000
    }
    Rotation float 0.785398
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "generic_block_grey.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 6.000000
      Y float 6.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string ""
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float -321.001251
      y_ float 543.752075
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "generic_block_grey.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 4.000000
      Y float 1.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string ""
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 320.712097
      y_ float 543.752075
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "generic_block_grey.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 4.000000
      Y float 1.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string ""
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 320.712097
      y_ float -544.884155
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "generic_block_grey.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 4.000000
      Y float 1.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string ""
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float -320.000000
      y_ float -544.884155
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "generic_block_grey.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 4.000000
      Y float 1.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "Collider"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float -576.000000
      y_ float 512.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 256.000000
    m_height float 128.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
}
GameObject
{
  name std::string "Collider"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float -576.000000
      y_ float -512.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 256.000000
    m_height float 128.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
}
GameObject
{
  name std::string "Collider"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 576.000000
      y_ float -512.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 256.000000
    m_height float 128.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float -640.000000
      y_ float 512.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float -512.000000
      y_ float 512.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float -128.000000
      y_ float 512.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 0.000000
      y_ float 512.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 384.000000
    m_height float 128.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 128.000000
      y_ float 512.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 640.000000
      y_ float -512.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 512.000000
      y_ float -512.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float -640.000000
      y_ float -512.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float -512.000000
      y_ float -512.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float -128.000000
      y_ float -512.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 128.000000
      y_ float -512.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "Platform_BM_Collider"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 0.000000
      y_ float -512.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 384.000000
    m_height float 128.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
}
GameObject
{
  name std::string "Collider"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 576.000000
      y_ float 512.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 256.000000
    m_height float 128.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
}
GameObject
{
  name std::string "GrinderBR3"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float 400.000000
      y_ float -515.000000
      z_ float 1.100000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 2.000000
      y_ float 2.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 64.000000
    m_height float 64.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "GrinderBR2"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float 320.000000
      y_ float -515.000000
      z_ float 1.100000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 2.000000
      y_ float 2.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 64.000000
    m_height float 64.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "GrinderBR1"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float 240.000000
      y_ float -515.000000
      z_ float 1.100000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 2.000000
      y_ float 2.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 64.000000
    m_height float 64.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 928.000000
      y_ float 128.000000
      z_ float 0.000000
    }
    Rotation float 1.570796
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "GrinderTR2"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float 320.000000
      y_ float 515.000000
      z_ float 1.100000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 2.000000
      y_ float 2.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 64.000000
    m_height float 64.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "GrinderTR1"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float 240.000000
      y_ float 515.000000
      z_ float 1.100000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 2.000000
      y_ float 2.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 64.000000
    m_height float 64.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "GrinderTR3"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float 400.000000
      y_ float 515.000000
      z_ float 1.100000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 2.000000
      y_ float 2.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 64.000000
    m_height float 64.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 928.000000
      y_ float 256.000000
      z_ float 0.000000
    }
    Rotation float 1.570796
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "GrinderTL1"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float -400.000000
      y_ float 515.000000
      z_ float 1.100000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 2.000000
      y_ float 2.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 64.000000
    m_height float 64.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 928.000000
      y_ float -128.000000
      z_ float 0.000000
    }
    Rotation float 1.570796
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "GrinderTL3"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float -240.000000
      y_ float 515.000000
      z_ float 1.100000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 2.000000
      y_ float 2.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 64.000000
    m_height float 64.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool true
    m_CollisionGroup std::string ""
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "GrinderTL2"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float -320.000000
      y_ float 515.000000
      z_ float 1.100000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 2.000000
      y_ float 2.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 64.000000
    m_height float 64.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool true
    m_CollisionGroup std::string ""
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "GrinderBL3"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float -240.000000
      y_ float -515.000000
      z_ float 1.100000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 2.000000
      y_ float 2.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 64.000000
    m_height float 64.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "GrinderBL2"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float -320.000000
      y_ float -515.000000
      z_ float 1.100000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 2.000000
      y_ float 2.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 64.000000
    m_height float 64.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "GrinderBL1"
  archetype std::string "Grinder"
  Transform
  {
    Translation Vec3
    {
      x_ float -400.000000
      y_ float -515.000000
      z_ float 1.100000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 2.000000
      y_ float 2.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "Grinder.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 64.000000
    m_height float 64.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
  Grinder
  {
  }
}
GameObject
{
  name std::string "PlatformCorner"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 829.846985
      y_ float -421.915771
      z_ float 1.000000
    }
    Rotation float 0.785398
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 1.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 4.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 256.000000
    m_height float 128.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 640.000000
      y_ float 512.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
}
GameObject
{
  name std::string "Platform"
  archetype std::string ""
  Transform
  {
    Translation Vec3
    {
      x_ float 928.000000
      y_ float 0.000000
      z_ float 0.000000
    }
    Rotation float 1.570796
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "light_block_on.png"
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.000000
      Y float 2.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  BoxCollider
  {
    m_width float 608.000000
    m_height float 128.000000
    m_materialName std::string "Static"
    m_hasCollisionCallback bool false
    m_CollisionGroup std::string ""
  }
}
GameObject
{
  name std::string "LevelSlotMachine"
  archetype std::string "LevelSlotMachine"
  Transform
  {
    Translation Vec3
    {
      x_ float 0.000000
      y_ float 0.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  SlotMachine
  {
    m_stopTexture std::string "ggg_reel.png"
    m_spinTexture std::string "ggg_reel_blur.png"
    m_slotBackTexture std::string "slotmachine_slotback.png"
    numSlots int 3
    slotOptions int 3
    startSpeed float 7.000000
    slotSize Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
    slotMargin float 10.000000
    slotOffset Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
    slotBackSize Vec2
    {
      X float 2.300000
      Y float 1.800000
    }
    startTime float 3.000000
    bonusTime float 0.200000
    useSpriteColor bool true
    backingColor Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
  }
  SlotController
  {
  }
}
