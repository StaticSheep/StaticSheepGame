NewSpace0
GameObject
{
  name std::string "red_circle_warning"
  archetype std::string "red_circle_warning"
  Transform
  {
    Translation Vec3
    {
      x_ float 73.281403
      y_ float -128.542831
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 2.000000
      y_ float 2.000000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "red_circle.png"
    m_layer unsignedint 2
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 0.941177
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  SpriteLight
  {
    m_spriteName std::string "red_circle_light.png"
    m_layer unsignedint 2
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    m_isOn bool true
    m_emissive bool false
    m_brightness LightColor
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
    Size Vec2
    {
      X float 1.000000
      Y float 1.000000
    }
  }
  BasicParticleSystem
  {
    m_texture std::string "red_orb.png"
    m_pos BasicParticleSystem::BPSPos
    {
      square bool false
      edgeOnly bool false
      radius float 93.000000
      angle float 1.000000
      randAngle float 0.000000
      offset Vec2
      {
        X float 0.000000
        Y float 0.000000
      }
      randOffset Vec2
      {
        X float 0.000000
        Y float 0.000000
      }
    }
    m_scaling BPartSys::BPSScaling
    {
      scale Vec2
      {
        X float 12.000000
        Y float 12.000000
      }
      randScale Vec2
      {
        X float 0.000000
        Y float 0.000000
      }
    }
    m_rot BPartSys::BPSRotation
    {
      rotation float 0.000000
      randRotation float 0.000000
    }
    m_life BPartSys::BPSLife
    {
      lifetime float 0.450000
      randLifetime float 0.000000
    }
    m_fade BPartSys::BPSFade
    {
      fadeOut bool true
      fadeOutTime float 0.550000
      randFadeoutTime float 0.000000
    }
    m_vel BPartSys::BPSVelocity
    {
      velocity Vec2
      {
        X float 0.000000
        Y float 0.000000
      }
      randVelocity Vec2
      {
        X float 0.000000
        Y float 0.000000
      }
      speedIn float 1.200000
      randSpeedIn float 0.100000
    }
    m_system BPartSys::BPSSystem
    {
      active bool true
      editorActive bool true
      spawnInterval float 60.000000
      spawnAmount float 15.000000
      spawnPerSecond float 0.000000
      shutdownTimer float 0.000000
    }
  }
}
