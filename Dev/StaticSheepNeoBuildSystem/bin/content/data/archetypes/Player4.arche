GameObject
{
  name std::string "Player"
  archetype std::string "Player4"
  Transform
  {
    Translation Vec3
    {
      x_ float 0.000000
      y_ float 0.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 1.000000
      y_ float 1.000000
      z_ float 0.000000
    }
  }
  SpineSprite
  {
    atlasName std::string "steve"
    entityName std::string "steve"
    sequenceName std::string "idle"
    framerate float 20.000000
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 1.000000
      A float 1.000000
    }
  }
  BasicParticleSystem
  {
    m_texture std::string "blue_orb.png"
    m_layer int 1
    m_pos BasicParticleSystem::BPSPos
    {
      square bool false
      edgeOnly bool false
      radius float 0.000000
      angle float 1.000000
      randAngle float 0.000000
      offset Vec2
      {
        X float 0.000000
        Y float 0.000000
      }
      randOffset Vec2
      {
        X float 0.000000
        Y float 0.000000
      }
    }
    m_scaling BPartSys::BPSScaling
    {
      scale Vec2
      {
        X float 16.000000
        Y float 16.000000
      }
      randScale Vec2
      {
        X float 0.000000
        Y float 0.000000
      }
    }
    m_rot BPartSys::BPSRotation
    {
      rotation float 0.000000
      randRotation float 0.000000
    }
    m_life BPartSys::BPSLife
    {
      lifetime float 0.220000
      randLifetime float 0.000000
    }
    m_fade BPartSys::BPSFade
    {
      fadeOut bool true
      fadeOutTime float 1.000000
      randFadeoutTime float 0.000000
    }
    m_vel BPartSys::BPSVelocity
    {
      velocity Vec2
      {
        X float 0.000000
        Y float 0.000000
      }
      randVelocity Vec2
      {
        X float 0.000000
        Y float 0.000000
      }
      speedIn float 0.000000
      randSpeedIn float 0.000000
    }
    m_system BPartSys::BPSSystem
    {
      active bool true
      editorActive bool true
      spawnInterval float 50.000000
      spawnAmount float 15.000000
      spawnPerSecond float 0.000000
      shutdownTimer float 0.000000
      parentToOwner bool false
    }
  }
  BoxCollider
  {
    m_width float 102.000000
    m_height float 102.000000
    m_materialName std::string "Wood"
    m_hasCollisionCallback bool true
    m_CollisionGroup std::string "Player4"
    m_snap bool false
  }
  SoundEmitter
  {
  }
  PlayerController
  {
    playerNum int 3
  }
  GamePad
  {
    GamepadIndex int 3
  }
  Cheats
  {
    enabled bool true
  }
}
