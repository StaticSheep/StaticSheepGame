GameObject
{
  name std::string "Missile"
  archetype std::string "Missile"
  Transform
  {
    Translation Vec3
    {
      x_ float 0.000000
      y_ float 0.000000
      z_ float 0.000000
    }
    Rotation float 0.000000
    Scale Vec3
    {
      x_ float 0.500000
      y_ float 0.500000
      z_ float 0.000000
    }
  }
  Sprite
  {
    m_spriteName std::string "energy_ball.png"
    m_layer unsignedint 1
    m_flipX bool false
    m_flipY bool false
    m_uvScale bool false
    Color Vec4
    {
      R float 1.000000
      G float 1.000000
      B float 0.078431
      A float 1.000000
    }
    Size Vec2
    {
      X float 2.500000
      Y float 2.500000
    }
    m_origin Vec2
    {
      X float 0.000000
      Y float 0.000000
    }
  }
  PointLight
  {
    m_layer unsignedint 1
    m_brightness LightColor
    {
      R float 0.700000
      G float 1.000000
      B float 0.200000
      A float 0.020000
    }
    m_attenuation LightVec3
    {
      X float 0.000000
      Y float -0.900000
      Z float 0.010000
    }
  }
  BasicParticleSystem
  {
    m_texture std::string "missilefuzz.png"
    m_layer int 1
    m_pos BasicParticleSystem::BPSPos
    {
      square bool false
      edgeOnly bool false
      radius float 8.000000
      angle float 1.000000
      randAngle float 0.000000
      offset Vec2
      {
        X float 0.000000
        Y float 0.000000
      }
      randOffset Vec2
      {
        X float 0.000000
        Y float 0.000000
      }
    }
    m_scaling BPartSys::BPSScaling
    {
      scale Vec2
      {
        X float 10.000000
        Y float 10.000000
      }
      randScale Vec2
      {
        X float 2.000000
        Y float 2.000000
      }
    }
    m_rot BPartSys::BPSRotation
    {
      rotation float 0.000000
      randRotation float 5.000000
    }
    m_life BPartSys::BPSLife
    {
      lifetime float 0.600000
      randLifetime float 0.000000
    }
    m_fade BPartSys::BPSFade
    {
      fadeOut bool true
      fadeOutTime float 0.500000
      randFadeoutTime float 0.200000
    }
    m_vel BPartSys::BPSVelocity
    {
      velocity Vec2
      {
        X float 0.000000
        Y float 0.000000
      }
      randVelocity Vec2
      {
        X float 0.000000
        Y float 0.000000
      }
      speedIn float -3.000000
      randSpeedIn float 0.000000
    }
    m_system BPartSys::BPSSystem
    {
      active bool true
      editorActive bool true
      spawnInterval float 60.000000
      spawnAmount float 2.000000
      spawnPerSecond float 0.000000
      shutdownTimer float 0.000000
      parentToOwner bool false
    }
  }
  ParticleSystem
  {
    textureName std::string "White.png"
    m_layer int 1
    particleLife ParticleOptionShort<float>
    {
      m_startMin float 0.500000
      m_startMax float 1.000000
    }
    directionEase int 2
    direction ParticleOption<Vec3>
    {
      m_startMin Vec3
      {
        x_ float -0.242536
        y_ float 0.970143
        z_ float 0.000000
      }
      m_startMax Vec3
      {
        x_ float 0.240000
        y_ float 0.970000
        z_ float 0.000000
      }
      m_endMin Vec3
      {
        x_ float -1.000000
        y_ float 0.000000
        z_ float 0.000000
      }
      m_endMax Vec3
      {
        x_ float 1.000000
        y_ float 0.000000
        z_ float 0.000000
      }
    }
    angularVelocity ParticleOption<float>
    {
      m_startMin float 0.000000
      m_startMax float 0.000000
      m_endMin float 0.000000
      m_endMax float 0.000000
    }
    scaleEase int 3
    scale ParticleOption<float>
    {
      m_startMin float 8.000000
      m_startMax float 10.000000
      m_endMin float 1.000000
      m_endMax float 3.000000
    }
    colorEase int 1
    color ParticleOption<Vec4>
    {
      m_startMin Vec4
      {
        R float 0.784314
        G float 0.501961
        B float 0.000000
        A float 0.784314
      }
      m_startMax Vec4
      {
        R float 1.000000
        G float 0.784314
        B float 0.000000
        A float 1.000000
      }
      m_endMin Vec4
      {
        R float 0.000000
        G float 0.501961
        B float 0.501961
        A float 0.098039
      }
      m_endMax Vec4
      {
        R float 0.784314
        G float 0.784314
        B float 0.000000
        A float 1.000000
      }
    }
    speedEase int 3
    speed ParticleOption<float>
    {
      m_startMin float 800.000000
      m_startMax float 900.000000
      m_endMin float 0.000000
      m_endMax float 0.000000
    }
  }
  ParticleCircleEmitter
  {
    parentToOwner bool false
    m_innerRadius float 0.000000
    m_outerRadius float 0.000000
    m_spawnOffset Vec3
    {
      x_ float 0.000000
      y_ float 0.000000
      z_ float 0.000000
    }
    m_amount ParticleOptionShort<float>
    {
      m_startMin float 8.000000
      m_startMax float 0.000000
    }
    m_rate ParticleOptionShort<float>
    {
      m_startMin float 1.000000
      m_startMax float 0.000000
    }
    spawning bool true
    timedSpawning bool false
    timed float -0.016700
    outward bool false
    inward bool false
  }
  CircleCollider
  {
    m_radius float 24.000000
    m_materialName std::string "Steel"
    m_hasCollisionCallback bool true
    m_CollisionGroup std::string ""
  }
  ImpactEffect
  {
    m_effect std::string "missile_explosion"
  }
  Bullet_Default
  {
    limitedLife bool false
    ttl float 0.000000
    lightFade float 0.500000
    fadeTime float 2.000000
  }
}
